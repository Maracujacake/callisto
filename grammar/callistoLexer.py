# Generated from grammar\callisto.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,109,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,83,8,
        17,11,17,12,17,84,1,18,1,18,5,18,89,8,18,10,18,12,18,92,9,18,1,18,
        1,18,1,19,1,19,5,19,98,8,19,10,19,12,19,101,9,19,1,20,4,20,104,8,
        20,11,20,12,20,105,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,1,0,5,1,0,48,57,4,0,32,32,48,57,65,90,97,122,3,
        0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,
        32,32,112,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,1,43,1,0,0,0,3,45,1,0,0,0,5,48,1,0,0,0,7,50,1,
        0,0,0,9,52,1,0,0,0,11,55,1,0,0,0,13,59,1,0,0,0,15,61,1,0,0,0,17,
        63,1,0,0,0,19,65,1,0,0,0,21,67,1,0,0,0,23,69,1,0,0,0,25,71,1,0,0,
        0,27,73,1,0,0,0,29,75,1,0,0,0,31,77,1,0,0,0,33,79,1,0,0,0,35,82,
        1,0,0,0,37,86,1,0,0,0,39,95,1,0,0,0,41,103,1,0,0,0,43,44,5,59,0,
        0,44,2,1,0,0,0,45,46,5,102,0,0,46,47,5,110,0,0,47,4,1,0,0,0,48,49,
        5,40,0,0,49,6,1,0,0,0,50,51,5,41,0,0,51,8,1,0,0,0,52,53,5,100,0,
        0,53,54,5,111,0,0,54,10,1,0,0,0,55,56,5,101,0,0,56,57,5,110,0,0,
        57,58,5,100,0,0,58,12,1,0,0,0,59,60,5,61,0,0,60,14,1,0,0,0,61,62,
        5,44,0,0,62,16,1,0,0,0,63,64,5,43,0,0,64,18,1,0,0,0,65,66,5,45,0,
        0,66,20,1,0,0,0,67,68,5,42,0,0,68,22,1,0,0,0,69,70,5,47,0,0,70,24,
        1,0,0,0,71,72,5,91,0,0,72,26,1,0,0,0,73,74,5,93,0,0,74,28,1,0,0,
        0,75,76,5,123,0,0,76,30,1,0,0,0,77,78,5,58,0,0,78,32,1,0,0,0,79,
        80,5,125,0,0,80,34,1,0,0,0,81,83,7,0,0,0,82,81,1,0,0,0,83,84,1,0,
        0,0,84,82,1,0,0,0,84,85,1,0,0,0,85,36,1,0,0,0,86,90,5,34,0,0,87,
        89,7,1,0,0,88,87,1,0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,
        0,91,93,1,0,0,0,92,90,1,0,0,0,93,94,5,34,0,0,94,38,1,0,0,0,95,99,
        7,2,0,0,96,98,7,3,0,0,97,96,1,0,0,0,98,101,1,0,0,0,99,97,1,0,0,0,
        99,100,1,0,0,0,100,40,1,0,0,0,101,99,1,0,0,0,102,104,7,4,0,0,103,
        102,1,0,0,0,104,105,1,0,0,0,105,103,1,0,0,0,105,106,1,0,0,0,106,
        107,1,0,0,0,107,108,6,20,0,0,108,42,1,0,0,0,5,0,84,90,99,105,1,6,
        0,0
    ]

class callistoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    NUMBER = 18
    STRING = 19
    ID = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'fn'", "'('", "')'", "'do'", "'end'", "'='", "','", 
            "'+'", "'-'", "'*'", "'/'", "'['", "']'", "'{'", "':'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "STRING", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "NUMBER", "STRING", "ID", "WS" ]

    grammarFileName = "callisto.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


